#!/bin/sh

# Git Repository Summary Script
# Usage:
#   Without arguments: Displays a summary of the current repository including project name, repository age, active days, commit count, file count, and list of authors with their contribution percentages, committer email, and author email.
#     Example: ./script.sh
#   With commit hash argument: Displays a summary focused on the specified commit, excluding the file count.
#     Example: ./script.sh <commit_hash>

commit=""
test $# -ne 0 && commit=$@
project=${PWD##*/}

#
# get date for the given <commit>
#

date() {
  git log --pretty='format: %ai' $1 | cut -d ' ' -f 2
}

#
# get active days for the given <commit>
#

active_days() {
  date $1 | uniq | awk '
    { sum += 1 }
    END { print sum }
  '
}

#
# get the commit total
#

commit_count() {
  git log --oneline $commit | wc -l | tr -d ' '
}

#
# total file count
#

file_count() {
  git ls-files | wc -l | tr -d ' '
}

#
# list authors along with their emails
#

authors() {
  {
    git log --pretty='format:%an|%ae|%ce' $commit | awk -F '|' '
    {
      name_email=$1 "|" $2 "|" $3;
      count[name_email]++
    }
    END {
      for (name_email in count) {
        split(name_email, fields, "|");
        printf "%-4d|%s|%s|%s|%s%2.1f%%\n", count[name_email], fields[1], fields[2], fields[3], fields[4], (count[name_email] * 100 / NR)
      }
    }
    ' | sort -rn
  }
}

#
# authors as a table with header
#

authors_table() {
  {
    printf "Count|Name|Author Email|Committer Email|Percentage\n"
    authors
  } | column -t -s '|'
}

#
# fetch repository age from oldest commit
#

repository_age() {
  git log --reverse --pretty=oneline --format="%cr" | head -n 1 | sed 's/ago//'
}

# summary

echo
echo "Git Repository Summary"
echo
echo " project  : $project"
echo " repo age :" $(repository_age)
echo " active   :"  $(active_days) days
echo " commits  :" $(commit_count)
if test "$commit" = ""; then
  echo " files    :" $(file_count)
fi
echo
echo "Authors"
echo
authors_table
echo
